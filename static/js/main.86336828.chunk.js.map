{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactItem.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","items","createReducer","id","name","number","state","payload","filter","_","combineReducers","contactsPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Section","title","children","className","s","SectionTitle","getFilter","getContacts","ContactForm","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","uniqueContact","allContasts","newName","isExistContact","find","contact","alert","checkUniqueContact","InputOverlay","InputLabel","htmlFor","Input","type","onChange","pattern","required","FormButton","Filter","filterInputId","filterValue","FilterLabel","FilterInput","ContactItem","onDeleteContact","ContactItemText","DeleteBtn","onClick","ContactList","filteredContacts","toLowerCase","includes","length","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mBCA1ED,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,UAAY,iC,mBCApID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,mBCApED,EAAOC,QAAU,CAAC,YAAc,mC,uKCCnBC,EAAaC,YAAa,0BAC1BC,EAAgBD,YAAa,6BAC7BE,EAAeF,YAAa,4BCMnCG,EAAQC,YAPO,CACnB,CAAEC,GAAI,OAAQC,KAAM,kBAAmBC,OAAQ,aAC/C,CAAEF,GAAI,OAAQC,KAAM,eAAgBC,OAAQ,aAC5C,CAAEF,GAAI,OAAQC,KAAM,oBAAqBC,OAAQ,aACjD,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,eAGpB,mBACxBR,GAAa,SAACS,EAAD,OAAUC,EAAV,EAAUA,QAAV,4BAA4BD,GAA5B,CAAmCC,OADxB,cAExBR,GAAgB,SAACO,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACfD,EAAME,QAAO,qBAAGL,KAAgBI,QAHT,IAMrBC,EAASN,YAAc,GAAD,eACzBF,GAAe,SAACS,EAAD,YAAMF,YAGTG,cAAgB,CAAET,QAAOO,WCLlCG,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,aAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,YAAeR,EAAuBS,IAGlDC,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAIhEC,UAAUC,IAGCC,EAAYC,YAAanB,G,gCCnBvBoB,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEJ,QAAtB,UACE,oBAAIG,UAAWC,IAAEC,aAAjB,SAAgCJ,IAC/BC,M,gBCRMI,EAAY,SAACnC,GAAD,OAAWA,EAAMY,SAASV,QACtCkC,EAAc,SAACpC,GAAD,OAAWA,EAAMY,SAASjB,O,gBCQtC,SAAS0C,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOxC,EAAP,KAAayC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOvC,EAAP,KAAeyC,EAAf,KACMC,EAAcC,cACdC,EAAgBD,cAEhB9B,EAAWgC,YAAYR,GACvBS,EAAWC,cAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBnD,EAAR,EAAQA,KAAMoD,EAAd,EAAcA,MAEd,OAAQpD,GACN,IAAK,OACHyC,EAAQW,GACR,MAEF,IAAK,SACHV,EAAUU,GACV,MAEF,QACE,SA4BN,OACE,uBAAMlB,UAAWC,IAAEI,YAAac,SAfb,SAACH,GACpBA,EAAEI,iBAEF,IAAMC,EAbmB,SAACC,EAAaC,GACvC,IAAMC,IAAmBF,EAAYG,MACnC,SAACC,GAAD,OAAaA,EAAQ5D,OAASyD,KAKhC,OAFAC,GAAkBG,MAAM,8BAEhBH,EAMcI,CAAmBhD,EAAUd,GAC9CuD,IAILA,GACER,EAAStD,EAAW,CAAEM,GAAI6C,cAAU5C,KAAMA,EAAMC,OAAQA,KAC1DwC,EAAQ,IACRC,EAAU,MAIV,UACE,sBAAKR,UAAWC,IAAE4B,aAAlB,UACE,uBAAO7B,UAAWC,IAAE6B,WAAYC,QAAStB,EAAzC,kBAGA,uBACET,UAAWC,IAAE+B,MACbC,KAAK,OACLnE,KAAK,OACLoD,MAAOpD,EACPoE,SAAUnB,EACVoB,QAAQ,yHACRrC,MAAM,kcACNjC,GAAI4C,EACJ2B,UAAQ,OAIZ,sBAAKpC,UAAWC,IAAE4B,aAAlB,UACE,uBAAO7B,UAAWC,IAAE6B,WAAYC,QAASpB,EAAzC,oBAGA,uBACEX,UAAWC,IAAE+B,MACbC,KAAK,MACLnE,KAAK,SACLoD,MAAOnD,EACPmE,SAAUnB,EACVoB,QAAQ,yFACRrC,MAAM,giBACNjC,GAAI8C,EACJyB,UAAQ,OAIZ,wBAAQpC,UAAWC,IAAEoC,WAAYJ,KAAK,SAAtC,4B,qBCvFS,SAASK,IACtB,IAAMC,EAAgB7B,cAEhB8B,EAAc5B,YAAYT,GAC1BU,EAAWC,YAAYpD,GAE7B,OACE,sBAAKsC,UAAWC,IAAE4B,aAAlB,UACE,uBAAOE,QAASQ,EAAevC,UAAWC,IAAEwC,YAA5C,mCAGA,uBACEzC,UAAWC,IAAEyC,YACbT,KAAK,OACLnE,KAAK,SACLoD,MAAOsB,EACPN,SAAU,SAAClB,GAAD,OAAOH,EAASnD,EAAasD,EAAEC,OAAOC,SAChDrD,GAAI0E,O,qBCKGI,EA1BK,SAAC,GAA2C,IAAzC9E,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQ6E,EAAsB,EAAtBA,gBACvC,OACE,qBAAI5C,UAAWC,IAAE0C,YAAjB,UACE,oBAAG3C,UAAWC,IAAE4C,gBAAhB,UACG/E,EADH,KACWC,KAGX,wBACEiC,UAAWC,IAAE6C,UACbjF,GAAIA,EACJoE,KAAK,SACLc,QAAS,kBAAMH,EAAgB/E,IAJjC,wB,iBCAS,SAASmF,IACtB,IAAMpE,EAAWgC,YAAYR,GACvBlC,EAAS0C,YAAYT,GAErB8C,EAAmBrE,EAASV,QAAO,YACvC,OADqD,EAAXJ,KAC9BoF,cAAcC,SAASjF,EAAOgF,kBAGtCrC,EAAWC,cACX8B,EAAkB,SAAC/E,GAAD,OAAQgD,EAASpD,EAAcI,KAEvD,OAAgC,IAA5BoF,EAAiBG,OAAqB,KAGxC,oBAAIpD,UAAWC,IAAE+C,YAAjB,SACGC,EAAiBI,KAAI,YAA2B,IAAxBxF,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjC,OACE,cAAC,EAAD,CAEEF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACR6E,gBAAiBA,GAJZ/E,QCtBF,SAASyF,IACtB,OACE,qCACE,2CACA,cAAC,EAAD,UACE,cAACjD,EAAD,MAGF,eAAC,EAAD,CAASP,MAAO,WAAhB,UACE,cAACwC,EAAD,IACA,cAACU,EAAD,UCTRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhF,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaiF,QAAS,KAAM/D,UAAWA,EAAvC,SACE,cAAC2D,EAAD,UAINK,SAASC,eAAe,U,kBCf1BvG,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,kCAAkC,WAAa,gCAAgC,MAAQ,2BAA2B,WAAa,mC","file":"static/js/main.86336828.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLabel\":\"Filter_FilterLabel__1v-r_\",\"FilterInput\":\"Filter_FilterInput__2HE_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__1k6z6\",\"ContactItemText\":\"ContactItem_ContactItemText__3HkDu\",\"DeleteBtn\":\"ContactItem_DeleteBtn__12Ijw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1m8oA\",\"SectionTitle\":\"Section_SectionTitle__1cz_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1DkZf\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contactList/addContact\");\r\nexport const deleteContact = createAction(\"contactList/deleteContact\");\r\nexport const changeFilter = createAction(\"contactList/changeFilter\");\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, changeFilter } from \"./contacts-actions\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Inna Palchynska\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Halyna Sinko\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Dariia Nikolaieva\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Sergiy Prodan\", number: \"227-91-26\" },\n];\n\nconst items = createReducer(initialState, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  whitelist: [\"contacts\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.Section}>\n      <h2 className={s.SectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","export const getFilter = (state) => state.contacts.filter;\nexport const getContacts = (state) => state.contacts.items;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkUniqueContact = (allContasts, newName) => {\n    const isExistContact = !!allContasts.find(\n      (contact) => contact.name === newName\n    );\n\n    isExistContact && alert(\"Contact is already exist!\");\n\n    return !isExistContact;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const uniqueContact = checkUniqueContact(contacts, name);\n    if (!uniqueContact) {\n      return;\n    }\n\n    uniqueContact &&\n      dispatch(addContact({ id: uuidv4(), name: name, number: number }));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.ContactForm} onSubmit={handleSubmit}>\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={s.Input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          id={nameInputId}\n          required\n        />\n      </div>\n\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={s.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          id={numberInputId}\n          required\n        />\n      </div>\n\n      <button className={s.FormButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n  checkUniqueContact: PropTypes.func,\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const filterInputId = uuidv4();\n\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch(changeFilter);\n\n  return (\n    <div className={s.InputOverlay}>\n      <label htmlFor={filterInputId} className={s.FilterLabel}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.FilterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n        id={filterInputId}\n      ></input>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={s.ContactItem}>\n      <p className={s.ContactItemText}>\n        {name}: {number}\n      </p>\n\n      <button\n        className={s.DeleteBtn}\n        id={id}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { deleteContact } from \"../../redux/contacts/contacts-actions\";\nimport {\n  getContacts,\n  getFilter,\n} from \"../../redux/contacts/contacts-selectors\";\nimport ContactItem from \"./ContactItem\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\n\n  if (filteredContacts.length === 0) return null;\n\n  return (\n    <ul className={s.ContactList}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func,\n};\n","import React from \"react\";\n\nimport Section from \"./Section\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Section>\n        <ContactForm />\n      </Section>\n\n      <Section title={\"Contacts\"}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1LbfS\",\"InputOverlay\":\"ContactForm_InputOverlay__1wARl\",\"InputLabel\":\"ContactForm_InputLabel__Yh4fy\",\"Input\":\"ContactForm_Input__42rjJ\",\"FormButton\":\"ContactForm_FormButton__fKbZD\"};"],"sourceRoot":""}